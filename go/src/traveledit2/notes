find up over whotespace can gonto prev marker or home
    ensureCursorInScreen() calls updateCursorXY so nonmeed to call updateCursorXY then ensureCursorInScreen
autocomplete could use selection regions as well? maybe?

do a max file size!

terminal todo:
    * only ensure cursor in screen, and set cursorxy? if current file is the one receiving data
    * allow naming terminals
    * move cursor to end of document when we get data 
    * refresh page and still see terminal.
    * later on, all the escape codes
    * add the arrows, tab, control, escape maybe option
    * when you close it on file view it also has to close 
    

JSON.stringify("\x1b")
"\u001b"
"\b"
ascii table
http://manpages.ubuntu.com/manpages/bionic/man7/ascii.7.html




https://flaviocopes.com/javascript-unicode/
a way to search what's selected
auto higlight (in new color) words that your cursor is over
when the something is selected change what the
buttons do! like all the script lines etc.

when the file view is open, change one button to refresh all
golang debugger

put a serverside limit on filesize


JSON.stringify("some things are cool".match(/e/g))
JSON.stringify(Object.keys("some things are cool".match(/e/g)))
["e","e"]
["e"]
e


http://192.168.0.21:8000/tepublic/iosevka_lucida/iosevka-fixed-ss13-regular.ttf

bugs with alt-tab and closing

select to run bash script one after the other

button to move the offset so selected line is at top or bottom

maybe highlight the last line or lines that were edited?
higlight an entire line lightly if it has a search term on there that matches

let this thing work when all you have is an ssh connection to a server

file server

make paste the first thing in order
on autocomplete remember last works
fuzzy find
have 2 paste buffers -- a ring buffer
nnn
fix undo with scripting lines
make it so you don't have to hit an extra tap affer pasting
// long swipe down - paste over (don't cut)
// short swipe down - paste
// short swipe up - delete
// long swipe up cut (delete and copy)
arrow over 
After talking with Kyle
- short swipe up: cut (copy/delete)
- long swipe up: keep it deleted, but undo the cut 
  - short swipe down: copy
- long swipe down: undo the copy (essentially unselect)  

- get rid of the "mini clipboard"
- tap when something is selected (lines): paste over and keep selected
  (we keep selected because then we can swipe left and right)
- tap on word, instead of delete it (mini clipboard), select it 
  I slightly worry about this because it has been nice to have the "ciw" vim functionality easy   
  but there are benefits. Lets try it. if something is copied you can tap,tap to paste over word.
  having a single clipboard is nice too
- when selected (inline), a tap will paste and get rid of selecting
- tap in left margin: paste lines
----------
scroll left when it is already all the way left select?

autocomplete wholenline - autocomplete non-spaced chunk!
script sub line
  

lightly highlight line if it has a search match anywhere
color whitespace to easily line up tabs

a no-whitespace option for "diff files"

a filetree-style viewer and you can copy/paste files by copy/pasting lines!

a way to name shells
a way to stop the server (and have it restart)

buttons to scroll right and left
stack of search terms and they get highlit different colors

remove the auto change tabs feature? or have a new files view?

uppercase and lowercase buttons

when selecting there should be resistance on punctuation

if 2 files are shadowed on eachother in the file view,
then maybe when you go to the file view that file won't be selected
when it should be

button to delete line?
make it a file server
ability to link to certain line within
see list of commands run

the save ui needs to be isolated per file
button to join lines
view of recent search terms
a view of recent copied items if 10 lines or less
make sure files list doesn't rearrange


idea: optionally put line numbers on the right

you have a script liens feature, but need a script all lines feature
maybe get rid of the mock url path and just use wuery strings
will be easier to path proxy that way.

http://www.myersdaily.org/joseph/javascript/md5-text.html


// marker teal terminal emulator stuff  
https://www.xfree86.org/current/ctlseqs.html
https://gist.github.com/justinmk/a5102f9a0c1810437885a04a07ef0a91
https://github.com/creack/pty
use example, try sending \r\n
https://xtermjs.org/
https://unix.stackexchange.com/questions/244736/detecting-shift-keyup-down-in-the-terminal
https://github.com/browsh-org/browsh

take a look at Mosh for ssh alternative

maybe lightly highlight the line if the search term is found on it?!
database queryer
tail mode
2 types 
    - simple jobs manager with streaming output
    - tmux or tty integration
    https://xtermjs.org/
    https://github.com/accetto/ubuntu-vnc-xfce-chromium
    https://stackoverflow.com/questions/45372066/is-it-possible-to-run-google-chrome-in-headless-mode-with-extensions
    https://www.digitalocean.com/community/tutorials/how-to-install-and-configure-vnc-on-ubuntu-20-04
    https://www.google.com/amp/s/www.tecmint.com/install-tightvnc-remote-desktop/amp/
    
centos
// https://www.rootusers.com/how-to-install-xfce-gui-in-centos-7-linux/
// yum install epel-release -y
// yum groupinstall "Server with GUI" -y
// yum groupinstall "Xfce" -y
https://www.google.com/amp/s/www.tecmint.com/install-tightvnc-remote-desktop/amp/
    yum groupinstall "X Window System" "Desktop"
    yum -y install tigervnc-server xorg-x11-fonts-Type1

    http://www.tuxfixer.com/install-xfce-4-desktop-environment-on-centos-7/
    sudo yum install epel-release
    sudo yum groupinstall "X Window system"
    sudo yum groupinstall xfce
    
    # in .vnc/xstartup (from the digitalocean documentation)
    #!/bin/bash
    xrdb $HOME/.Xresources
    startxfce4 &
    
    yum install -y chromium
    
    and then when connected to vnc,
    open terminal and run chromium-browser

    wget https://dl.google.com/linux/direct/google-chrome-stable_current_x86_64.rpm
    
    
improved file view
    
newline in middle goes for most indented,
     but newline at end doesn't
fuzzy autocomplete
are you sure you want to close unsaved
copy and paste
tmux integration or your own tmux-like thing (at least with tail.)
tap on edges should not scroll left and right, just move cursor (in practice it wasn't so great)
context aware inline paste
    * if the last thing you did was copy,
      first thing should paste
      if last thing you did was type,
      first thing should be comlelted word

automatic hoghlight of words under cursor?

consistent order in files view

Autocomplete should update lastTypedWord
more setters - example moving selection does not make sure cursor is in view.
make a setter for everytime you move so you
don't have to have that setInterval for nav
are we using http2??
use gopls and or go guru (language server?)

test that you opened a ../ file correctly
pastebuffer history in a file?
inline web browser
b9b57011462004f40e21f1e4771756c0de4b7383

bug when running bash comand, if you switch tab
result will be pasted on new window

tap to delete should be it's own undo, not part of line undo?
next to . should still autoclose
newline at { doesnt indent (becsuse not o mode?)
when you scroll, just start the rendering
in the canvas further down
* paste over?
* fast paste multiple?
* left and right entire word?

you could divide sides into 3 sections
* left right
* up down
* back forward (locations in document)

short list
* [done] if you are next to a comma, still close parens
* cycling autocomplete bug where cursor doesn't move to end
* autocomplete doesn't save last word? (I think I explicity say not to)
* move to end bug
* select expansion?
* solve the delete, then paste problem
* only save diffs.
* verify the hash of the file 
* go back to where you were
* newline right before an end-closer should actually do the newline and move it down

double left to go back
double right to go forward
(of whare you last were? or within document?)

still close the (), {} "" etc if you are right before a comma.
autocomplete should also add to last saved?

bug with surrounding in quotes etc when the whole line is selected
  - you need to pass in false to one of the params I think

Do another pass at button consolidation
for example "//" and "un //" can be the same button
clear log button can be moved down.
space and backspace buttons can be removed

something helpful if the line below matches the line above, make it green.
don't show the red save button if hashed file matches saved file hash.
ability to have a .color file in a directiory
and server code will check that to see what color to show files
in the ui
or maybe better a // color blue 
comment in the file.
do a fuzzy atcmplt!!!
fix bug with autocomplete not moving cursor


inline autocomplete: the order could depend on whwt you last did


// marker lime 
potentially show all markers in file list
long press for marker jump is jittery because it first scrolls up one line
same with going to end of line...
go to end of line
go to line number

button for pull origin

add file markers - maybe make it part of find feature
where you can gondown and up
see list of all markers in file list

document all the features
// marker yellow 
wget "https://unpkg.com/diff@4.0.2/dist/diff.js"
your simpleDiffOld3 is decent, but try to manually implement
the Myers algorithm to compare.

why sometimes does autocomplete not move cursor to end
Dont allow saves while file is loading

reload should reset version
bug with sometimes filemode things it's a file but it's a directory?
-        if (files[i].fullPath == fullPath && files[i].fileMode == "file") {
+        if (files[i].fullPath == fullPath) {
             duplicateFile(files[i], cursorLineIndex)
             return
         }
         
Do the thing where you hash the file
to make sure the one you are starting with is the right one


big problem with undo and multiple files!!!
neet to tie it into setLines call too?

x.replace(/scriptLines/g, "theScriptLines")

add ability to "go back" to previous scroll positions
swap words with taps
second copy buffer


big todo: when using the "open" button,
why did it actually make a request when we already had that file?
seems to have still kept the files in sync
this is another reason we need to normalize the paths

regex search
implement s/foo/bar/gc

make it so you can select a region,
press a button and it will open a new temporary file.
and you can type something as simple as

     x.replace(/foo/g, bar) 
     
where x is the line and it will map it behind the scenes

local timeout for all fetch requests?

do you have the feature where the last removed word is part of paste cycle?

you need to see how many people are viewing.

wrap in quotes feature

0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMMOPQRSTUV

alert(files[1].lines == files[2].lines)

normalize the fullPath, replacing ".." and "."
make row of bash commands configurable?

Test commenting something that's already commented or uncommenting something that's double commented
    and how it works with multiple lines
    
bug with entering space in nav mode when the line is empty

There seems to be a bug with nav mode backspace button when there is a tab.

if the first file doesn't exist, whole app doesn't load

It should autocomplete parens, brackets, etc before a comma

allow select backwards
and allow the up/down/left/right controls
to work with select

undo needs to just be a diff of lines changed
this can also be used to save diffs too!
do a verification step first.
This can also be used as a completely new way to
have the screenshare featuere.

alternative server render that is smarter
on scrolling it just sends new lines?? (or maybe just whole new screen only when scrolling.)
on cursor move it just sends the cursor pos 
and web sockets



left/right up/down 
ummd
lmmr

make autocomplete save the last word too?
    but conditionally?
    
copyBuffer = ["x".repeat(160)]

do gzip compression of the server view  payload
you'll have to do it all in js I guess.

the idea of doing 2 rendering layers
so when you move cursor in same screen, you
don't have to send all the text. worth it?

maybe make a websocket version of the server rendering.
each letter typed (when typing slowly, makes 2 requestes -- why not 1)
diff of rendered state to get even smaller renders?
possibly add rendered layers so we don't have to render so much.

https://drew.ue1-dev-portal.gpsinsight.com/te

reload() needs to also reset the undoStack
also the saved/saving/etc state

cut down on multiple renders in general if we need?

come up with something simpler cor pasting
maybe a ring of a few slots
right now we have a copyBuffer and a cutBuffer
and it doesn't feel great.
maybe make something similar to acPlop
also, could you get rid of pasteMode?
maybe make paste() take an argument of what it's pasting
example common case:

if (something()) {
    doThing()
} else {
    doOtherThing()
}

bug, initial load doesn't link files if there are duplicates

reload should preserve location.
BUG: reloading a file when there are 2 of the same file open
  - the lines get unlinked
reload should remember cursor position


autocompleted words should be included in lastWord?

have a cut buffer and a copy buffer

when you type a new line or paste lines
and the same file is open, adjust the cursor index


weirdness when you paste when there is nothing there
if a dorectory is the first file that loads
it doesn't have the ..

bug when first file is the proxy path?

do something special when searching in directory fileMode.
keep the search box open. when you hit enter, open that directory.
as you type, jump to that search and make sure it's in view

a terminal based read only view! using vt-100
visible with netcat?



save last deleted word to go in pase cycle 

make it so you can select backwards or forwards
 
for undo just track lines inserted and deleted
when you undo or redo, you'll have to update all the indexes down the chain.
if you get good at that, you can save a file by applying the diffs

remember line number on refresh
an alt-tab (of sorts) within a file

bug: sometimes inline pasting puts an extra space at the end.
bug: pressing // with nonline selection does a weird thing

// marker pink
resurrect the most recently used file view as an optional eay to view files

Prevent file from being changed out from underneath us
BUG: with tabs search don when 2 results on the same line does't seem to work

only autocomplete line if cursor is at the end

check that the cursor is at the end before you autocomplete thr word.

moving to new file should clear selection (or possibly allow selection per file) 
first load doesn't show ..
warning if closed unsaved

hitting cmd on fileList mode 
make navigating files easier
  maybe integrate with the search feature?
    * keep search feature up between file loads tonseasily search the next dir?
  maybe simply autocomplete with directories in bash mode

lots of programming is research
it would be cool do have text-only ways 
to research right in the app
* stackoverflow
* go docs (possible now with some command line calls?)


jump to corresponding paren or curly etc
be smart about quotes and comments?

feature: maybe a status line that says
what function you are in (aka first line with 0 indent... first line with x indent?)

feature: add markers where you can mark a file/line
   and then see a list of marked lines to go to them
   and maybe a button to toggle beween marked lines
   

idea see all functions (or left-most lines)
bug: inline paste (by tapping) if it has
   a inltab in it things will be messed up.
   fixed

  
ideas for gestures
-- long tap after select to get new mode
-- left and right are comment and uncomment
-- down is paste over
-- long tap selects a word
-- swiping up cuts and down copies, just like normal
  -- but left and right will expand the selection  
-- think thru multiple paste buffers
swipe left after you are already full left
swipe right after you are already full right
swipe fast down goes to next occurance
swipe up fast goes to prev occurance


alert(".".charCodeAt(0))

why did it autocomplete 2018, (with a comma at the end?)

remember file position across reloads
button or gesture for going to file (including line number) in bash
bug with miltiple files when you reset what fx.lines is
like in undo
a way to go back to where you were!!
if you are tabbed in gray out anything before that tab level?!
make selectedRegions part of the file
audit some actions to make sure you call ensureCursorInScreen
redo the while toggle word/inline paste thing.
* Single tap in edit mode rules
  * when in edit mode,
    if your last action was typing
    repeated tapping will:
    * autocomplete the word before
      the cursor, even if there are letters after.
      Autocomplete pool is selected of bouncing up and down
      looking for a matching word,
      once it finishes finding all words in a file,
      it will move on to the next file, then the next.
  * whenever you type it still remember your last typed word
  * when in edit mode,
    if your last action was moving
    tapping will:
    * 1 delete the word at the cursor
      even if it's touching the end or beginning
    * 2 paste the last typed word
    * 3 inline-paste the copy buffer
* extra selecting rules (these aren't all, just new)
    * remove current festure where
      * A touch down, B touch down,
        B touch up, A touch up selects a word
    * Add feature where
      * A touch down,
        B touch down,
        selects the word at the cursor
      * then (while A still down)
        B touch up
        B touch down
        selects the nearest range it can find
          * quote (keeping in-mind escapes etc)
            because it's common for quotes to be single line
            I am going to not search for multi-line quotes
            multi line quotes are trickier because
            the quote char doesn't have a start and end
           * ()<>{}[]. (skipping ones in quotes?)
           * for each iteration, first select inside the symbols,
             then outside, then move to the next outer one
    * Add feature where
      If you have text selected and you type "("
      it will surround with psrens.
      If it is already surrounded with parens in the selection,
      un surround it.
      if you want to double surroun with parens, just
      don't include the parens in the selection
      
After you past, keep it selected so you can indent!
always think of what's slow      
             
         
(test (thing here) this (thing out))        
pase over? long tap after selection
long tap in nav mode will insert a new line then
go into edit mode?
will paste over?



make find down and find up general action buttons
  that change based on context.
  like when you are in ja console mode (not exist yet)
  the action button will execute th code?
  or maybe add a new contextual action button?
  maybe the save button actually 
  in bash, the action should be to go to
  the file it finds on the line you are on
  

autocomplete lines too?!
more efficient and less bugy undo
https://stackoverflow.com/questions/54369513/how-to-count-the-correct-length-of-a-string-with-emojis-in-javascript
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/codePointAt

when there is an error with bash, you loose the directory? and it bugs out
full word search option


search should be a new pane and it remembers


remember order when refreshing?

make a find in files feature!!!
it should open a new pane with all the files
that you can scroll through and open

touching after selecting should copy?
or just selecting should copy??

ability to make a new file or directory

real terminal emulator (use tmux?)
in bash mode, allow for clicking on files to change directory there

collapsing/expanding indention

inconsistencies: 
Sometimes we set selectMode to "line"
before pasting. Sometimes we don't.

updateCursorXY()
ensureCursorInScreen()
are somewhat overlapping.

More ideas:
if you have text selected you can type "(" to surround
with parens etc.

two finger tap eithout move to select
word, then parens, quote, etc etc

ability to script and copy-paste
------------
when you are editing, any cursoor change in the canvas
should affect the cursor change in the input element

add gzip

a local storage save, just in case

need to add file explorer,
allow nee directory


do shortcuts like
zfn func () { ...
zer if err != nil
zpr ()
zcr {}
zbr []
zpq ("")
zps ('')
ztg <>
zct </>


select in left margin selects lines

single tap - edit mode
double tap - selects word
triple tap - selects next most outer grouping (using quotes, parens, brackets, etc.
(you can get slightly smart and handle wscaped quotes.

tab in
tab  out

tap then tap drag selects 

move line down
move line up


remember where you were when you toggle the log
select within a single line
preserve vertical space
handle undefined lines!!

a little slider keyboard on the bottom!!
a little slider wordboard on the bottom

move cursor back to top when done deleting

selecting should select the text box too
paste from outside source (more than 1 line)

ui and flow of not going past the end of the file
right side will be a word selector based on all the words 

when something is selected when you
paste, it needs to delete that.
you need a command line component.
you maybe dont need full terminal emulation
but a way to run commands

need to support multibyte chars like emojis.
you'll need to make the chars an array too
that will take more time but doable.

it saved an empty file!
This was when I was driving to payson and working on it
I did get js alerts about network issues
but weird that it would have saved an empty file
Maybe I need to send a hash of the file too.
or at least content length.
todo: ability to turn off auto save
todo: add a formal save button
todo: offline mode
todo: a way to copy the text out? 

when you keep tapping in insert mode it toggles
the word. gets closest words. up down up down.
maybe it deletes the word first?

re-visit last word feature? good idea. too heavy

more gestures, fewer buttons?
after selecting - you could hit a letter?
or gesture
after selecting -
* up - cut
* left - dedent
* right - indent
* down - copy
* single tap - unselect
* upright - comment
* upleft uncomment

when navigating cursor - tapping in left margin
makes a new line - actually what if it pasted
and two finger tap is a new line
nah, but then you can't paste inside a line
2 touch paste should be good.


long press in margin for selecting whole lines

swipe all the way left twice does search

second finger selects
margin selects whole line

keyboard shortcuts for for loops functions
you type replacement text like zfn zfor

when cursor is at word:
* single tap on bottom right of screen:
  search down for that word
* single tap on bottom left of screen:
  first time delete, the subsequent toggles
* single tap in big moddle area: edit
* single tap too right: search up


larger todo: have a more sophisticated undo and redo.
undo? move cursor back and forth
redo?


5 margin positions
paste copy cut duplicate newline


pasting sub lines not working so well?

three finger paste not working

while in edit mode
* if tap while cursor is at end of word -- autocomplete
* if tap while cursor is inside word -- find close words
* if tap while cursor is at start, delete?
* if tap while cursor is in space, find close words

don't render so much. use some sort of requestanimationframe 
vertical select is tap twice when one finger is already down


halt


