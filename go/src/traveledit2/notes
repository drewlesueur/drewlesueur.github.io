0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMMOPQRSTUV

copyBuffer = ["x".repeat(160)]


maybe make a websocket version of the server rendering.
each letter typed (when typing slowly, makes 2 requestes -- why not 1)
diff of rendered state to get even smaller renders?
possibly add rendered layers so we don't have to render so much.

https://drew.ue1-dev-portal.gpsinsight.com/te

reload() needs to also reset the undoStack
also the saved/saving/etc state

cut down on multiple renders in general if we need?

come up with something simpler cor pasting
maybe a ring of a few slots
right now we have a copyBuffer and a cutBuffer
and it doesn't feel great.
maybe make something similar to acPlop
also, could you get rid of pasteMode?
maybe make paste() take an argument of what it's pasting
example common case:

if (something()) {
    doThing()
} else {
    doOtherThing()
}

bug, initial load doesn't link files if there are duplicates

reload should preserve location.
BUG: reloading a file when there are 2 of the same file open
  - the lines get unlinked
reload should remember cursor position


autocompleted words should be included in lastWord?

have a cut buffer and a copy buffer

when you type a new line or paste lines
and the same file is open, adjust the cursor index


weirdness when you paste when there is nothing there
if a dorectory is the first file that loads
it doesn't have the ..

bug when first file is the proxy path?

do something special when searching in directory fileMode.
keep the search box open. when you hit enter, open that directory.
as you type, jump to that search and make sure it's in view

a terminal based read only view! using vt-100
visible with netcat?



save last deleted word to go in pase cycle 

make it so you can select backwards or forwards
 
for undo just track lines inserted and deleted
when you undo or redo, you'll have to update all the indexes down the chain.
if you get good at that, you can save a file by applying the diffs

remember line number on refresh
an alt-tab (of sorts) within a file

bug: sometimes inline pasting puts an extra space at the end.
bug: pressing // with nonline selection does a weird thing

resurrect the most recently used file view as an optional eay to view files

Prevent file from being changed out from underneath us
BUG: with tabs search don when 2 results on the same line does't seem to work

only autocomplete line if cursor is at the end

check that the cursor is at the end before you autocomplete thr word.

moving to new file should clear selection (or possibly allow selection per file) 
first load doesn't show ..
warning if closed unsaved

hitting cmd on fileList mode 
make navigating files easier
  maybe integrate with the search feature?
    * keep search feature up between file loads tonseasily search the next dir?
  maybe simply autocomplete with directories in bash mode

lots of programming is research
it would be cool do have text-only ways 
to research right in the app
* stackoverflow
* go docs (possible now with some command line calls?)


jump to corresponding paren or curly etc
be smart about quotes and comments?

feature: maybe a status line that says
what function you are in (aka first line with 0 indent... first line with x indent?)

feature: add markers where you can mark a file/line
   and then see a list of marked lines to go to them
   and maybe a button to toggle beween marked lines
   

idea see all functions (or left-most lines)
bug: inline paste (by tapping) if it has
   a inltab in it things will be messed up.
   fixed

  
ideas for gestures
-- long tap after select to get new mode
-- left and right are comment and uncomment
-- down is paste over
-- long tap selects a word
-- swiping up cuts and down copies, just like normal
  -- but left and right will expand the selection  
-- think thru multiple paste buffers
swipe left after you are already full left
swipe right after you are already full right
swipe fast down goes to next occurance
swipe up fast goes to prev occurance


alert(".".charCodeAt(0))

why did it autocomplete 2018, (with a comma at the end?)

remember file position across reloads
button or gesture for going to file (including line number) in bash
bug with miltiple files when you reset what fx.lines is
like in undo
a way to go back to where you were!!
if you are tabbed in gray out anything before that tab level?!
make selectedRegions part of the file
audit some actions to make sure you call ensureCursorInScreen
redo the while toggle word/inline paste thing.
* Single tap in edit mode rules
  * when in edit mode,
    if your last action was typing
    repeated tapping will:
    * autocomplete the word before
      the cursor, even if there are letters after.
      Autocomplete pool is selected of bouncing up and down
      looking for a matching word,
      once it finishes finding all words in a file,
      it will move on to the next file, then the next.
  * whenever you type it still remember your last typed word
  * when in edit mode,
    if your last action was moving
    tapping will:
    * 1 delete the word at the cursor
      even if it's touching the end or beginning
    * 2 paste the last typed word
    * 3 inline-paste the copy buffer
* extra selecting rules (these aren't all, just new)
    * remove current festure where
      * A touch down, B touch down,
        B touch up, A touch up selects a word
    * Add feature where
      * A touch down,
        B touch down,
        selects the word at the cursor
      * then (while A still down)
        B touch up
        B touch down
        selects the nearest range it can find
          * quote (keeping in-mind escapes etc)
            because it's common for quotes to be single line
            I am going to not search for multi-line quotes
            multi line quotes are trickier because
            the quote char doesn't have a start and end
           * ()<>{}[]. (skipping ones in quotes?)
           * for each iteration, first select inside the symbols,
             then outside, then move to the next outer one
    * Add feature where
      If you have text selected and you type "("
      it will surround with psrens.
      If it is already surrounded with parens in the selection,
      un surround it.
      if you want to double surroun with parens, just
      don't include the parens in the selection
      
After you past, keep it selected so you can indent!
always think of what's slow      
             
         
(test (thing here) this (thing out))        
pase over? long tap after selection
long tap in nav mode will insert a new line then
go into edit mode?
will paste over?



make find down and find up general action buttons
  that change based on context.
  like when you are in ja console mode (not exist yet)
  the action button will execute th code?
  or maybe add a new contextual action button?
  maybe the save button actually 
  in bash, the action should be to go to
  the file it finds on the line you are on
  

autocomplete lines too?!
more efficient and less bugy undo
https://stackoverflow.com/questions/54369513/how-to-count-the-correct-length-of-a-string-with-emojis-in-javascript
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/codePointAt

when there is an error with bash, you loose the directory? and it bugs out
full word search option


search should be a new pane and it remembers


remember order when refreshing?

make a find in files feature!!!
it should open a new pane with all the files
that you can scroll through and open

touching after selecting should copy?
or just selecting should copy??

ability to make a new file or directory

real terminal emulator (use tmux?)
in bash mode, allow for clicking on files to change directory there

collapsing/expanding indention

inconsistencies: 
Sometimes we set selectMode to "line"
before pasting. Sometimes we don't.

updateCursorXY()
ensureCursorInScreen()
are somewhat overlapping.

More ideas:
if you have text selected you can type "(" to surround
with parens etc.

two finger tap eithout move to select
word, then parens, quote, etc etc

ability to script and copy-paste
------------
when you are editing, any cursoor change in the canvas
should affect the cursor change in the input element

add gzip

a local storage save, just in case

need to add file explorer,
allow nee directory


do shortcuts like
zfn func () { ...
zer if err != nil
zpr ()
zcr {}
zbr []
zpq ("")
zps ('')
ztg <>
zct </>


select in left margin selects lines

single tap - edit mode
double tap - selects word
triple tap - selects next most outer grouping (using quotes, parens, brackets, etc.
(you can get slightly smart and handle wscaped quotes.

tab in
tab  out

tap then tap drag selects 

move line down
move line up


remember where you were when you toggle the log
select within a single line
preserve vertical space
handle undefined lines!!

a little slider keyboard on the bottom!!
a little slider wordboard on the bottom

move cursor back to top when done deleting

selecting should select the text box too
paste from outside source (more than 1 line)

ui and flow of not going past the end of the file
right side will be a word selector based on all the words 

when something is selected when you
paste, it needs to delete that.
you need a command line component.
you maybe dont need full terminal emulation
but a way to run commands

need to support multibyte chars like emojis.
you'll need to make the chars an array too
that will take more time but doable.

it saved an empty file!
This was when I was driving to payson and working on it
I did get js alerts about network issues
but weird that it would have saved an empty file
Maybe I need to send a hash of the file too.
or at least content length.
todo: ability to turn off auto save
todo: add a formal save button
todo: offline mode
todo: a way to copy the text out? 

when you keep tapping in insert mode it toggles
the word. gets closest words. up down up down.
maybe it deletes the word first?

re-visit last word feature? good idea. too heavy

more gestures, fewer buttons?
after selecting - you could hit a letter?
or gesture
after selecting -
* up - cut
* left - dedent
* right - indent
* down - copy
* single tap - unselect
* upright - comment
* upleft uncomment

when navigating cursor - tapping in left margin
makes a new line - actually what if it pasted
and two finger tap is a new line
nah, but then you can't paste inside a line
2 touch paste should be good.


long press in margin for selecting whole lines

swipe all the way left twice does search

second finger selects
margin selects whole line

keyboard shortcuts for for loops functions
you type replacement text like zfn zfor

when cursor is at word:
* single tap on bottom right of screen:
  search down for that word
* single tap on bottom left of screen:
  first time delete, the subsequent toggles
* single tap in big moddle area: edit
* single tap too right: search up


larger todo: have a more sophisticated undo and redo.
undo? move cursor back and forth
redo?


5 margin positions
paste copy cut duplicate newline


pasting sub lines not working so well?

three finger paste not working

while in edit mode
* if tap while cursor is at end of word -- autocomplete
* if tap while cursor is inside word -- find close words
* if tap while cursor is at start, delete?
* if tap while cursor is in space, find close words

don't render so much. use some sort of requestanimationframe 
vertical select is tap twice when one finger is already down


halt


